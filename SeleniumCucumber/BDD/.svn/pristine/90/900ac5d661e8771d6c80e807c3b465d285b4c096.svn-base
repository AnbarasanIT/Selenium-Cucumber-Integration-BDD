package walgreens.ecom.batch.automation.stepdefinitions.pharmacy.Prescriptions;

import java.util.List;
import java.util.Map;
import org.openqa.selenium.support.events.EventFiringWebDriver;
import cucumber.annotation.en.Then;
import cucumber.table.DataTable;
import walgreens.ecom.batch.automation.library.accountdashboard.personalinfo.ManagePersonalInformationLibrary;
import walgreens.ecom.batch.automation.library.common.CommonLibrary;
import walgreens.ecom.batch.automation.library.pharmacy.Prescriptions.RefillHubLibrary;
import walgreens.ecom.batch.automation.library.pharmacy.Prescriptions.SpecialtyRX;
import walgreens.ecom.batch.automation.library.pharmacy.homepage.CommonPharmacyLibrary;
import walgreens.ecom.batch.framework.common.beans.ScenarioBean;
import walgreens.ecom.batch.framework.common.beans.StepBean;

public class PrescriptionsSteps extends CommonLibrary
{
    @Then("^\"([^\"]*)\" Customer validates the smart search functionality in the refill hub page:$")
    public void Customer_validates_the_smart_search_functionality_in_the_refill_hub_page(String arg1, DataTable arg2) {
	EventFiringWebDriver browser = null;
	ScenarioBean scenario = null;
	StepBean step = null;
	Map<String, List<String>> dataMap = null;
	try {
	    dataMap = CommonLibrary.getHorizontalData(arg2);
	    scenario = CommonLibrary.getScenario(arg1);
	    step = new StepBean();
	    step.setStepName("Customer validates the smart search functionality in the refill hub page:");
	    scenario.getStepBeans().add(step);
	    browser = CommonLibrary.getBrowser(Thread.currentThread().getId());
	    RefillHubLibrary.validateSmartSearch(browser, step, dataMap);
	} catch (Exception e) {
	    e.printStackTrace();
	} finally {
	    CommonLibrary.ReportIt(browser, scenario, step);
	}
    }
    
    @Then("^\"([^\"]*)\" Customer validates the New Refillhub functionalities:$")
    public void Customer_validates_the_New_Refillhub_functionalities(String arg1, DataTable arg2) {
	EventFiringWebDriver browser = null;
	ScenarioBean scenario = null;
	StepBean step = null;
	Map<String, List<String>> dataMap = null;
	try {
	    dataMap = CommonLibrary.getHorizontalData(arg2);
	    scenario = CommonLibrary.getScenario(arg1);
	    step = new StepBean();
	    step.setStepName("Customer validates the New Refillhub functionalities:");
	    scenario.getStepBeans().add(step);
	    browser = CommonLibrary.getBrowser(Thread.currentThread().getId());
	    RefillHubLibrary.validateNewRefillHubpage(browser, step, dataMap);
	} catch (Exception e) {
	    e.printStackTrace();
	} finally {
	    CommonLibrary.ReportIt(browser, scenario, step);
	}
    }
    
    @Then("^\"([^\"]*)\" Customer verifies the auto refill status in refill hub page:$")
    public void Customer_verifies_the_auto_refill_status_in_refill_hub_page(String arg1, DataTable arg2) {
	EventFiringWebDriver browser = null;
	ScenarioBean scenario = null;
	StepBean step = null;
	Map<String, List<String>> dataMap = null;
	try {
	    dataMap = CommonLibrary.getHorizontalData((arg2));
	    scenario = CommonLibrary.getScenario(arg1);
	    step = new StepBean();
	    step.setStepName("Customer verifies the auto refill status in refill hub page:");
	    scenario.getStepBeans().add(step);
	    browser = CommonLibrary.getBrowser(Thread.currentThread().getId());
	    RefillHubLibrary.verifyAutoRefilStatus(browser, step, dataMap);
	} catch (Exception e) {
	    CommonLibrary.LogIt(e, null, step);
	} finally {
	    CommonLibrary.ReportIt(browser, scenario, step);
	}
    }
    
    @Then("^\"([^\"]*)\" Customer adds prescriptions to cart by type:$")
    public void Customer_adds_prescriptions_to_cart_by_type(String arg1, DataTable arg2) {
	EventFiringWebDriver browser = null;
	ScenarioBean scenario = null;
	StepBean step = null;
	Map<String, List<String>> dataMap = null;
	try {
	    dataMap = CommonLibrary.getHorizontalData((arg2));
	    scenario = CommonLibrary.getScenario(arg1);
	    step = new StepBean();
	    step.setStepName("Customer adds prescriptions to cart by type:");
	    scenario.getStepBeans().add(step);
	    browser = CommonLibrary.getBrowser(Thread.currentThread().getId());
	    RefillHubLibrary.addRxByType(browser, step, dataMap);
	} catch (Exception e) {
	    CommonLibrary.LogIt(e, null, step);
	} finally {
	    CommonLibrary.ReportIt(browser, scenario, step);
	}
    }
    
    @Then("^\"([^\"]*)\" Customer validates the Expand and Collapse Functionalities of the Refill hub:$")
    public void Customer_validates_the_Expand_and_Collapse_Functionalities_of_the_Refill_hub(String arg1, DataTable arg2) {
	EventFiringWebDriver browser = null;
	ScenarioBean scenario = null;
	StepBean step = null;
	Map<String, List<String>> dataMap = null;
	try {
	    dataMap = CommonLibrary.getHorizontalData((arg2));
	    scenario = CommonLibrary.getScenario(arg1);
	    step = new StepBean();
	    step.setStepName("Customer validates the Expand collapse functionalities of the refill hub:");
	    scenario.getStepBeans().add(step);
	    browser = CommonLibrary.getBrowser(Thread.currentThread().getId());
	    RefillHubLibrary.verifyExpandCollapse(browser, step, dataMap);
	} catch (Exception e) {
	    CommonLibrary.LogIt(e, null, step);
	} finally {
	    CommonLibrary.ReportIt(browser, scenario, step);
	}
    }
    
    @Then("^\"([^\"]*)\" Customer validates sorting of the refillhub page columns:$")
    public void Customer_validates_sorting_of_the_refillhub_page_columns(String arg1, DataTable arg2) {
	EventFiringWebDriver browser = null;
	ScenarioBean scenario = null;
	StepBean step = null;
	Map<String, List<String>> dataMap = null;
	try {
	    dataMap = CommonLibrary.getHorizontalData((arg2));
	    scenario = CommonLibrary.getScenario(arg1);
	    step = new StepBean();
	    step.setStepName("Customer validates sorting of the refillhub page columns:");
	    scenario.getStepBeans().add(step);
	    browser = CommonLibrary.getBrowser(Thread.currentThread().getId());
	    RefillHubLibrary.refillHubSortingVerification(browser, step, dataMap);
	} catch (Exception e) {
	    e.printStackTrace();
	} finally {
	    CommonLibrary.ReportIt(browser, scenario, step);
	}
    }
    
    @Then("^\"([^\"]*)\" User gets customer details from the DB:$")
    public void User_retrievs_customer_details_from_DB(String arg1, DataTable arg2) {
	EventFiringWebDriver browser = null;
	ScenarioBean scenario = null;
	StepBean step = null;
	Map<String, List<String>> dataMap = null;
	try {
	    dataMap = CommonLibrary.getHorizontalData(arg2);
	    scenario = CommonLibrary.getScenario(arg1);
	    step = new StepBean();
	    step.setStepName("User gets customer details from the DB:");
	    scenario.getStepBeans().add(step);
	    browser = CommonLibrary.getBrowser(Thread.currentThread().getId());
	    SpecialtyRX.getCustInfo(step, scenario, dataMap);
	} catch (Exception e) {
	    e.printStackTrace();
	} finally {
	    CommonLibrary.ReportIt(browser, scenario, step);
	}
    }
    
    @Then("^\"([^\"]*)\" User verifies DB for SM ID:$")
    public void User_verifies_SMID(String arg1, DataTable arg2) {
	EventFiringWebDriver browser = null;
	ScenarioBean scenario = null;
	StepBean step = null;
	Map<String, List<String>> dataMap = null;
	try {
	    dataMap = CommonLibrary.getHorizontalData(arg2);
	    scenario = CommonLibrary.getScenario(arg1);
	    step = new StepBean();
	    step.setStepName("User verifies DB for SM ID:");
	    scenario.getStepBeans().add(step);
	    browser = CommonLibrary.getBrowser(Thread.currentThread().getId());
	    SpecialtyRX.verifySMID(step, scenario, dataMap);
	} catch (Exception e) {
	    e.printStackTrace();
	} finally {
	    CommonLibrary.ReportIt(browser, scenario, step);
	}
    }
    
    @Then("^\"([^\"]*)\" User retrieves SM record from DB:$")
    public void User_retrieves_SMID(String arg1, DataTable arg2) {
	EventFiringWebDriver browser = null;
	ScenarioBean scenario = null;
	StepBean step = null;
	Map<String, List<String>> dataMap = null;
	try {
	    dataMap = CommonLibrary.getHorizontalData(arg2);
	    scenario = CommonLibrary.getScenario(arg1);
	    step = new StepBean();
	    step.setStepName("User retrieves SM record from DB:");
	    scenario.getStepBeans().add(step);
	    browser = CommonLibrary.getBrowser(Thread.currentThread().getId());
	    SpecialtyRX.getSMID(step, scenario, dataMap);
	} catch (Exception e) {
	    e.printStackTrace();
	} finally {
	    CommonLibrary.ReportIt(browser, scenario, step);
	}
    }
    
    @Then("^\"([^\"]*)\" User completes details form:$")
    public void User_completes_details_form(String arg1, DataTable arg2) {
	EventFiringWebDriver browser = null;
	ScenarioBean scenario = null;
	StepBean step = null;
	Map<String, List<String>> dataMap = null;
	try {
	    dataMap = CommonLibrary.getHorizontalData(arg2);
	    scenario = CommonLibrary.getScenario(arg1);
	    step = new StepBean();
	    step.setStepName("User completes details form:");
	    scenario.getStepBeans().add(step);
	    browser = CommonLibrary.getBrowser(Thread.currentThread().getId());
	    SpecialtyRX.completeDetailsForm(browser, step, dataMap);
	} catch (Exception e) {
	    e.printStackTrace();
	} finally {
	    CommonLibrary.ReportIt(browser, scenario, step);
	}
    }
    
    @Then("^\"([^\"]*)\" User completes address form:$")
    public void User_completes_address_form(String arg1, DataTable arg2) {
	EventFiringWebDriver browser = null;
	ScenarioBean scenario = null;
	StepBean step = null;
	Map<String, List<String>> dataMap = null;
	try {
	    dataMap = CommonLibrary.getHorizontalData(arg2);
	    scenario = CommonLibrary.getScenario(arg1);
	    step = new StepBean();
	    step.setStepName("User completes address form:");
	    scenario.getStepBeans().add(step);
	    browser = CommonLibrary.getBrowser(Thread.currentThread().getId());
	    SpecialtyRX.completeAddressForm(browser, step, dataMap);
	} catch (Exception e) {
	    e.printStackTrace();
	} finally {
	    CommonLibrary.ReportIt(browser, scenario, step);
	}
    }
    
    @Then("^\"([^\"]*)\" User adds specialty prescriptions:$")
    public void User_adds_specialty_prescription(String arg1, DataTable arg2) {
	EventFiringWebDriver browser = null;
	ScenarioBean scenario = null;
	StepBean step = null;
	Map<String, List<String>> dataMap = null;
	try {
	    dataMap = CommonLibrary.getHorizontalData(arg2);
	    scenario = CommonLibrary.getScenario(arg1);
	    step = new StepBean();
	    step.setStepName("User adds specialty prescriptions:");
	    scenario.getStepBeans().add(step);
	    browser = CommonLibrary.getBrowser(Thread.currentThread().getId());
	    SpecialtyRX.addPrescriptions(browser, step, dataMap);
	} catch (Exception e) {
	    e.printStackTrace();
	} finally {
	    CommonLibrary.ReportIt(browser, scenario, step);
	}
    }
    
    @Then("^\"([^\"]*)\" User validates prescriptions in refillhub:$")
    public void User_validates_prescription(String arg1, DataTable arg2) {
	EventFiringWebDriver browser = null;
	ScenarioBean scenario = null;
	StepBean step = null;
	Map<String, List<String>> dataMap = null;
	try {
	    dataMap = CommonLibrary.getHorizontalData(arg2);
	    scenario = CommonLibrary.getScenario(arg1);
	    step = new StepBean();
	    step.setStepName("User validates prescriptions in refillhub:");
	    scenario.getStepBeans().add(step);
	    browser = CommonLibrary.getBrowser(Thread.currentThread().getId());
	    SpecialtyRX.validateRxRefillhub(browser, step, dataMap);
	} catch (Exception e) {
	    e.printStackTrace();
	} finally {
	    CommonLibrary.ReportIt(browser, scenario, step);
	}
    }
        
    
    @Then("^\"([^\"]*)\" Customer validates the Auto Refill Overlay of the refillhub page:$")
    public void Customer_validates_the_Auto_Refill_Overlay_of_the_refillhub_page(String arg1, DataTable arg2) {
	EventFiringWebDriver browser = null;
	ScenarioBean scenario = null;
	StepBean step = null;
	Map<String, List<String>> dataMap = null;
	try {
	    dataMap = CommonLibrary.getHorizontalData((arg2));
	    scenario = CommonLibrary.getScenario(arg1);
	    step = new StepBean();
	    step.setStepName("Customer validates the Auto Refill Overlay of the refillhub page:");
	    scenario.getStepBeans().add(step);
	    browser = CommonLibrary.getBrowser(Thread.currentThread().getId());
	    RefillHubLibrary.refillHubAutoRefillValidation(browser, step, dataMap);
	} catch (Exception e) {
	    CommonLibrary.LogIt(e, null, step);
	} finally {
	    CommonLibrary.ReportIt(browser, scenario, step);
	}
	
    }
    @Then("^\"([^\"]*)\" Customer fetch the default pickup or ship location:$")
    public void  Customer_fetch_the_default_pickup_or_ship_location(String arg1, DataTable arg2) {
	EventFiringWebDriver browser = null;
	ScenarioBean scenario = null;
	StepBean step = null;
	Map<String, List<String>> dataMap = null;
	try {
	    dataMap = CommonLibrary.getHorizontalData((arg2));
	    scenario = CommonLibrary.getScenario(arg1);
	    step = new StepBean();
	    step.setStepName(" Customer fetch the default pickup or ship location:");
	    scenario.getStepBeans().add(step);
	    browser = CommonLibrary.getBrowser(Thread.currentThread().getId());
	    RefillHubLibrary.fetchDefaultPickupShipLocation(browser, step, dataMap);
	} catch (Exception e) {
	    CommonLibrary.LogIt(e, null, step);
	} finally {
	    CommonLibrary.ReportIt(browser, scenario, step);
	}
    }
    
    @Then("^\"([^\"]*)\" Customer deletes the cc details:$")
    public void  Customer_deletes_the_CC_Details(String arg1, DataTable arg2) {
	EventFiringWebDriver browser = null;
	ScenarioBean scenario = null;
	StepBean step = null;
	Map<String, List<String>> dataMap = null;
	try {
	    dataMap = CommonLibrary.getHorizontalData((arg2));
	    scenario = CommonLibrary.getScenario(arg1);
	    step = new StepBean();
	    step.setStepName("Customer deletes the cc details:");
	    scenario.getStepBeans().add(step);
	    browser = CommonLibrary.getBrowser(Thread.currentThread().getId());
	    RefillHubLibrary.DeleteCCDetail(browser, step, dataMap);
	} catch (Exception e) {
	    CommonLibrary.LogIt(e, null, step);
	} finally {
	    CommonLibrary.ReportIt(browser, scenario, step);
	}
    } 
    
}
