package walgreens.ecom.batch.automation.stepdefinitions.pharmacy.homepage;

import java.util.List;
import java.util.Map;
import org.openqa.selenium.support.events.EventFiringWebDriver;
import walgreens.ecom.batch.automation.library.common.CommonLibrary;
import walgreens.ecom.batch.automation.library.pharmacy.homepage.AutoRefillVerificationLibrary;
import walgreens.ecom.batch.framework.common.beans.ScenarioBean;
import walgreens.ecom.batch.framework.common.beans.StepBean;
import cucumber.annotation.en.And;
import cucumber.annotation.en.Then;
import cucumber.table.DataTable;

public class AutoRefillVerificationSteps {
    @And("^\"([^\"]*)\" Customer cancels Auto Refills in Prescription Auto Refills Page:$")
    public void Customer_cancels_Auto_Refills_in_Prescription_Auto_Refills_Page(String arg1, DataTable arg2) {
	EventFiringWebDriver browser = null;
	ScenarioBean scenario = null;
	StepBean step = null;
	Map<String, List<String>> dataMap = null;
	try {
	    dataMap = CommonLibrary.getHorizontalData((arg2));
	    scenario = CommonLibrary.getScenario(arg1);
	    step = new StepBean();
	    step.setStepName("Customer cancels Auto Refills in Prescription Auto Refills Page");
	    scenario.getStepBeans().add(step);
	    browser = CommonLibrary.getBrowser(Thread.currentThread().getId());
	    AutoRefillVerificationLibrary.cancelAutoRefill(browser, step, dataMap);
	} catch (Exception e) {
	    CommonLibrary.LogIt(e, null, step);
	} finally {
	    CommonLibrary.ReportIt(browser, scenario, step);
	}
    }

    @And("^\"([^\"]*)\" Customer selects required Rx for AutoRefill from Set Up Auto Refill page and navigates to Delivery Options Page:$")
    public void Customer_selects_required_Rx_for_AutoRefill_from_Set_Up_Auto_Refill_page_and_navigates_to_Delivery_Options_Page(String arg1, DataTable arg2) {
	EventFiringWebDriver browser = null;
	ScenarioBean scenario = null;
	StepBean step = null;
	Map<String, List<String>> dataMap = null;
	try {
	    dataMap = CommonLibrary.getHorizontalData(arg2);
	    scenario = CommonLibrary.getScenario(arg1);
	    step = new StepBean();
	    step.setStepName("Customer selects required Rx for AutoRefill from Set Up Auto Refill page and navigates to Delivery Options Page:");
	    scenario.getStepBeans().add(step);
	    browser = CommonLibrary.getBrowser(Thread.currentThread().getId());
	    AutoRefillVerificationLibrary.selectRxforAutorefill(browser, step, dataMap);
	} catch (Exception e) {
	    CommonLibrary.LogIt(e, null, step);
	} finally {
	    CommonLibrary.ReportIt(browser, scenario, step);
	}
    }

    @And("^\"([^\"]*)\" Customer Chooses Delivery options from Delivery Options for Auto Refills Page and completes the Auto Refill:$")
    public void Customer_Chooses_Delivery_options_from_Delivery_Options_for_Auto_Refills_Page_and_completes_the_Auto_Refill(String arg1, DataTable arg2) {
	EventFiringWebDriver browser = null;
	ScenarioBean scenario = null;
	StepBean step = null;
	Map<String, List<String>> dataMap = null;
	try {
	    dataMap = CommonLibrary.getHorizontalData((arg2));
	    scenario = CommonLibrary.getScenario(arg1);
	    step = new StepBean();
	    step.setStepName("Customer Chooses Delivery options from Delivery Options for Auto Refills Page and completes the Auto Refill");
	    scenario.getStepBeans().add(step);
	    browser = CommonLibrary.getBrowser(Thread.currentThread().getId());
	    AutoRefillVerificationLibrary.selectDeliveryOptionandCompleteAutoRefill(browser, step, dataMap);
	} catch (Exception e) {
	    CommonLibrary.LogIt(e, null, step);
	} finally {
	    CommonLibrary.ReportIt(browser, scenario, step);
	}
    }

    @Then("^\"([^\"]*)\" Customer updates the Credit Card information from Edit ExpressPay Credit Card Information overlay or page:$")
    public void Customer_updates_the_Credit_Card_information_from_Edit_ExpressPay_Credit_Card_Information_verlay_or_page(String arg1, DataTable arg2) {
	EventFiringWebDriver browser = null;
	ScenarioBean scenario = null;
	StepBean step = null;
	Map<String, List<String>> dataMap = null;
	try {
	    dataMap = CommonLibrary.getHorizontalData((arg2));
	    scenario = CommonLibrary.getScenario(arg1);
	    step = new StepBean();
	    step.setStepName("Customer updates the Credit Card information from Edit ExpressPay Credit Card Information overlay or page:");
	    scenario.getStepBeans().add(step);
	    browser = CommonLibrary.getBrowser(Thread.currentThread().getId());
	    AutoRefillVerificationLibrary.updateCCInfoFromEditExpresspayCardInformationPageorOverlay(browser, step, dataMap);
	} catch (Exception e) {
	    CommonLibrary.LogIt(e, null, step);
	} finally {
	    CommonLibrary.ReportIt(browser, scenario, step);
	}
    }

    @Then("^\"([^\"]*)\" Customer selects required family member, Prescription type and cancels all setup Autorefill Prescriptions:$")
    public void Customer_selects_required_family_member_Prescription_type_and_cancels_all_setup_Autorefill_Prescriptions(String arg1, DataTable arg2) {
	EventFiringWebDriver browser = null;
	ScenarioBean scenario = null;
	StepBean step = null;
	Map<String, List<String>> dataMap = null;
	try {
	    dataMap = CommonLibrary.getHorizontalData((arg2));
	    scenario = CommonLibrary.getScenario(arg1);
	    step = new StepBean();
	    step.setStepName("Customer selects required family member, Prescription type and cancels all setup Autorefill Prescriptions:");
	    scenario.getStepBeans().add(step);
	    browser = CommonLibrary.getBrowser(Thread.currentThread().getId());
	    AutoRefillVerificationLibrary.selectFamilyMemberOrCancelSetupAutoRefills(browser, step, dataMap);
	} catch (Exception e) {
	    CommonLibrary.LogIt(e, null, step);
	} finally {
	    CommonLibrary.ReportIt(browser, scenario, step);
	}
    }
    @Then("^\"([^\"]*)\" Customer updates the Shipping information from Edit Shipping Information overlay:$")
    public void Customer_updates_the_Shipping_information_from_Edit_Shipping_Information_overlay(String arg1, DataTable arg2) {
	EventFiringWebDriver browser = null;
	ScenarioBean scenario = null;
	StepBean step = null;
	Map<String, List<String>> dataMap = null;
	try {
	    dataMap = CommonLibrary.getHorizontalData((arg2));
	    scenario = CommonLibrary.getScenario(arg1);
	    step = new StepBean();
	    step.setStepName("Customer updates the Shipping information from Edit Shipping Information overlay:");
	    scenario.getStepBeans().add(step);
	    browser = CommonLibrary.getBrowser(Thread.currentThread().getId());
	    AutoRefillVerificationLibrary.updateShippingInfoFromEditShippingInformationOverlay(browser, step, dataMap);
	} catch (Exception e) {
	    CommonLibrary.LogIt(e, null, step);
	} finally {
	    CommonLibrary.ReportIt(browser, scenario, step);
	}
    }
    
    
    @Then("^\"([^\"]*)\" Customer validates the default selection of the Delivery settings functionality:$")
    public void Customer_validates_the_default_selection_of_the_Delivery_settings_functionality(String arg1, DataTable arg2) {
	EventFiringWebDriver browser = null;
	ScenarioBean scenario = null;
	StepBean step = null;
	Map<String, List<String>> dataMap = null;
	try {
	    dataMap = CommonLibrary.getHorizontalData((arg2));
	    scenario = CommonLibrary.getScenario(arg1);
	    step = new StepBean();
	    step.setStepName(" Customer validates the default selection of the Delivery settings functionality");
	    scenario.getStepBeans().add(step);
	    browser = CommonLibrary.getBrowser(Thread.currentThread().getId());
	    AutoRefillVerificationLibrary.changeDeliverySettingsValidation(browser,  step, dataMap);
	} catch (Exception e) {
	    e.printStackTrace();
	} finally {
	    CommonLibrary.ReportIt(browser, scenario, step);
	}
    }
    
}
