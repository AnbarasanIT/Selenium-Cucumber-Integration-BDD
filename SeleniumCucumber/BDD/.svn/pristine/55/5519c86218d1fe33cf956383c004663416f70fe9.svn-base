package walgreens.ecom.batch.automation.stepdefinitions.accountdashboard.personalinfo;

import java.util.List;
import java.util.Map;
import org.openqa.selenium.support.events.EventFiringWebDriver;
import walgreens.ecom.batch.automation.library.accountdashboard.personalinfo.ManageCommunicationPreferencesLibrary;
import walgreens.ecom.batch.automation.library.common.CommonLibrary;
import walgreens.ecom.batch.framework.common.beans.ScenarioBean;
import walgreens.ecom.batch.framework.common.beans.StepBean;
import cucumber.annotation.en.Then;
import cucumber.table.DataTable;

public class ManageCommunicationPreferencesSteps {
    @Then("^\"([^\"]*)\" Customer either Signs up or Cancels the Refill Reminders from Communication Preferences page:$")
    public void Customer_either_Signs_up_or_Cancels_the_Refill_Reminders_from_Communication_Preferences_page(String arg1, DataTable arg2) {
	EventFiringWebDriver browser = null;
	ScenarioBean scenario = null;
	StepBean step = null;
	Map<String, List<String>> dataMap = null;
	try {
	    dataMap = CommonLibrary.getHorizontalData((arg2));
	    scenario = CommonLibrary.getScenario(arg1);
	    step = new StepBean();
	    step.setStepName("Customer either Signs up or Cancels the Refill Reminders from Communication Preferences page");
	    scenario.getStepBeans().add(step);
	    browser = CommonLibrary.getBrowser(Thread.currentThread().getId());
	    ManageCommunicationPreferencesLibrary.setupRefillReminders(browser, step, dataMap);
	} catch (Exception e) {
	    e.printStackTrace();
	} finally {
	    CommonLibrary.ReportIt(browser, scenario, step);
	}
    }

    @Then("^\"([^\"]*)\" Customer updates Your Pharmacy Preferences from Communication Preference page:$")
    public void Customer_updates_Your_Pharmacy_Preferences_from_Communication_Preference_page(String arg1, DataTable arg2) {
	EventFiringWebDriver browser = null;
	ScenarioBean scenario = null;
	StepBean step = null;
	Map<String, List<String>> dataMap = null;
	try {
	    dataMap = CommonLibrary.getHorizontalData((arg2));
	    scenario = CommonLibrary.getScenario(arg1);
	    step = new StepBean();
	    step.setStepName("Customer updates Your Pharmacy Preferences from Communication Preference page");
	    scenario.getStepBeans().add(step);
	    browser = CommonLibrary.getBrowser(Thread.currentThread().getId());
	    ManageCommunicationPreferencesLibrary.changeYourRxPreferences(browser, step, dataMap);
	} catch (Exception e) {
	    e.printStackTrace();
	} finally {
	    CommonLibrary.ReportIt(browser, scenario, step);
	}
    }

    @Then("^\"([^\"]*)\" Customer updates Health Center Email Preferences from Communication Preference page:$")
    public void Customer_updates_Health_Center_Email_Preferences_from_Communication_Preference_page(String arg1, DataTable arg2) {
	EventFiringWebDriver browser = null;
	ScenarioBean scenario = null;
	StepBean step = null;
	Map<String, List<String>> dataMap = null;
	try {
	    dataMap = CommonLibrary.getHorizontalData((arg2));
	    scenario = CommonLibrary.getScenario(arg1);
	    step = new StepBean();
	    step.setStepName("Customer updates Health Center Email Preferences from Communication Preference page");
	    scenario.getStepBeans().add(step);
	    browser = CommonLibrary.getBrowser(Thread.currentThread().getId());
	    ManageCommunicationPreferencesLibrary.updateHealthEmailPreferences(browser, step, dataMap);
	} catch (Exception e) {
	    e.printStackTrace();
	} finally {
	    CommonLibrary.ReportIt(browser, scenario, step);
	}
    }

    @Then("^\"([^\"]*)\" Customer Validates the Email Preference in Communication Preferences page:$")
    public void Customer_Validates_the_Email_Preference_in_Communication_Preferences_page(String arg1, DataTable arg2) {
	EventFiringWebDriver browser = null;
	ScenarioBean scenario = null;
	StepBean step = null;
	Map<String, List<String>> dataMap = null;
	try {
	    dataMap = CommonLibrary.getHorizontalData((arg2));
	    scenario = CommonLibrary.getScenario(arg1);
	    step = new StepBean();
	    step.setStepName("Customer Validates the Email Preference in Communication Preferences page");
	    scenario.getStepBeans().add(step);
	    browser = CommonLibrary.getBrowser(Thread.currentThread().getId());
	    ManageCommunicationPreferencesLibrary.verifyEmailPreferences(browser, scenario, step, dataMap);

	} catch (Exception e) {
	    e.printStackTrace();
	} finally {
	    CommonLibrary.ReportIt(browser, scenario, step);
	}
    }

    @Then("^\"([^\"]*)\" Customer verifies the prescription ready alerts:$")
    public void Customer_verifies_the_prescription_ready_alerts(String arg1) {
	EventFiringWebDriver browser = null;
	ScenarioBean scenario = null;
	StepBean step = null;
	Map<String, List<String>> dataMap = null;
	try {
	    scenario = CommonLibrary.getScenario(arg1);
	    step = new StepBean();
	    step.setStepName("Customer verifies the prescription ready alerts:");
	    scenario.getStepBeans().add(step);
	    browser = CommonLibrary.getBrowser(Thread.currentThread().getId());
	    ManageCommunicationPreferencesLibrary.verifyRxReadyTextAlerts(browser, step);
	} catch (Exception e) {
	    e.printStackTrace();
	} finally {
	    CommonLibrary.ReportIt(browser, scenario, step);
	}
    }

    @Then("^\"([^\"]*)\" Customer updates Email Subscriptions from Communication Preferences Page:$")
    public void Customer_updates_Email_Subscriptions_from_Communication_Preferences_Page(String arg1, DataTable arg2) {
	EventFiringWebDriver browser = null;
	ScenarioBean scenario = null;
	StepBean step = null;
	Map<String, List<String>> dataMap = null;
	try {
	    dataMap = CommonLibrary.getHorizontalData((arg2));
	    scenario = CommonLibrary.getScenario(arg1);
	    step = new StepBean();
	    step.setStepName("Customer updates Email Subscriptions from Communication Preferences Page:");
	    scenario.getStepBeans().add(step);
	    browser = CommonLibrary.getBrowser(Thread.currentThread().getId());
	    ManageCommunicationPreferencesLibrary.updateEmailSubscriptions(browser, scenario, step, dataMap);

	} catch (Exception e) {
	    e.printStackTrace();
	} finally {
	    CommonLibrary.ReportIt(browser, scenario, step);
	}
    }
}
