package walgreens.ecom.batch.framework.common.dao;

import java.io.File;
import java.sql.Connection;
import java.sql.DriverManager;
import java.util.HashMap;
import java.util.Map;
import javax.sql.rowset.CachedRowSet;
import walgreens.ecom.batch.framework.EcommTestRunner;

public class TestDataDBManager {

    private static Map<String, Connection> inputFileConnectionMap = null;

    public static String getTestData(String inputFileName, String dataSheetName, String rowID, String columnName) throws Exception {
	String query = (new StringBuilder("SELECT [")).append(columnName).append("]").append(" FROM [").append(dataSheetName).append("$]").append(" WHERE ID = '").append(rowID).append("'").toString();
	CachedRowSet queryOutput = AutomationDBManager.executeQuery(query, getInputFileConnection(inputFileName));
	if (queryOutput.size() == 0) {
	    throw new Exception((new StringBuilder("No Row found in the Excel Sheet for the current Row ID = ")).append(rowID).toString());
	}
	queryOutput.next();
	return queryOutput.getString(columnName);
    }

    public static Connection getInputFileConnection(String inputFileName) throws Exception {
	Connection inputFileConnection = null;
	String excelFileExtension = ".xls";
	if (inputFileConnectionMap == null) {
	    inputFileConnectionMap = new HashMap<String, Connection>();
	}

	inputFileName = inputFileName + excelFileExtension;

	if (inputFileConnectionMap.get(inputFileName) != null) {
	    inputFileConnection = inputFileConnectionMap.get(inputFileName);
	    if (inputFileConnection.isClosed()) // RAM - 2/8/13 - To avoid fatal
						// error if connection is closed
						// by put data
		inputFileConnection = DriverManager.getConnection((new StringBuilder("jdbc:odbc:Driver={Microsoft Excel Driver (*" + excelFileExtension + ")};DBQ="))
			.append(EcommTestRunner.automationInputDataFilePath).append(inputFileName).append(";READONLY=FALSE").toString());
	    inputFileConnectionMap.put(inputFileName, inputFileConnection);
	} else {
	    inputFileConnection = DriverManager.getConnection((new StringBuilder("jdbc:odbc:Driver={Microsoft Excel Driver (*" + excelFileExtension + ")};DBQ="))
		    .append(EcommTestRunner.automationInputDataFilePath).append(inputFileName).append(";READONLY=FALSE").toString());
	    inputFileConnectionMap.put(inputFileName, inputFileConnection);
	}
	return inputFileConnection;
    }

    public static void putTestData(String outputFileName, String dataSheetName, String rowID, String columnName, String dataValue) throws Exception {
	String query = (new StringBuilder("UPDATE [")).append(dataSheetName).append("$]").append(" SET ").append(columnName).append(" = '").append(dataValue).append("'").append(" WHERE ID = '")
		.append(rowID).append("'").toString();
	int queryOutput = AutomationDBManager.executeUpdate(query, getInputFileConnection(outputFileName));
	if (queryOutput == 0) {
	    throw new Exception("Operation failed. No Row was effected in the Excel sheet");
	}
	return;
    }

}
